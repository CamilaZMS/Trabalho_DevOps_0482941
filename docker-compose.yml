version: "3.8"

services:
  mariadb:
    build:
      context: . # Contexto de build é o diretório atual (onde o docker-compose.yml está localizado)
      dockerfile: mariadb/Dockerfile_mariadb # Caminho correto para o Dockerfile_mariadb dentro da pasta mariadb
    container_name: mariadb
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: school_db
      MYSQL_USER: flask_user
      MYSQL_PASSWORD: flask_password
    networks:
      - monitoring_net

  flask:
    build:
      context: .
      dockerfile: flask/Dockerfile_flask
    container_name: flask
    ports:
      - "5000:5000"
    depends_on:
      - mariadb
    environment:
      FLASK_APP: app
      FLASK_ENV: development
      FLASK_DB_HOST: mariadb
      FLASK_DB_USER: flask_user
      FLASK_DB_PASSWORD: flask_password
      FLASK_DB_NAME: school_db
      DEBUG_METRICS: "1"
    networks:
      - monitoring_net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    depends_on:
      - flask
      - mysqld_exporter
    networks:
      - monitoring_net

  mysqld_exporter:
    image: prom/mysqld-exporter:latest
    container_name: mysqld_exporter
    ports:
      - "9104:9104"
    volumes:
      - ./my.cnf:/etc/.my.cnf
    command: --config.my-cnf=/etc/.my.cnf
    depends_on:
      - mariadb
    networks:
      - monitoring_net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - monitoring_net

volumes:
  db_data:
  grafana_data:

networks:
  monitoring_net:
